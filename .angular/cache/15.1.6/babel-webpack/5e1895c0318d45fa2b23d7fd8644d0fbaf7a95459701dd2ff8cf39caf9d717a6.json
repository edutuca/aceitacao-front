{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet DashboardComponent = class DashboardComponent {\n  constructor(restricaoService, layoutService) {\n    this.restricaoService = restricaoService;\n    this.layoutService = layoutService;\n    this.subscription = this.layoutService.configUpdate$.subscribe(() => {\n      this.initChart();\n    });\n  }\n  ngOnInit() {\n    this.initChart();\n    this.restricaoService.getRestricoes().subscribe(data => {\n      this.restricoes = data;\n    });\n    this.items = [{\n      label: 'Add New',\n      icon: 'pi pi-fw pi-plus'\n    }, {\n      label: 'Remove',\n      icon: 'pi pi-fw pi-minus'\n    }];\n  }\n  initChart() {\n    const documentStyle = getComputedStyle(document.documentElement);\n    const textColor = documentStyle.getPropertyValue('--text-color');\n    const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n    const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n    this.chartData = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'First Dataset',\n        data: [65, 59, 80, 81, 56, 55, 40],\n        fill: false,\n        backgroundColor: documentStyle.getPropertyValue('--bluegray-700'),\n        borderColor: documentStyle.getPropertyValue('--bluegray-700'),\n        tension: .4\n      }, {\n        label: 'Second Dataset',\n        data: [28, 48, 40, 19, 86, 27, 90],\n        fill: false,\n        backgroundColor: documentStyle.getPropertyValue('--green-600'),\n        borderColor: documentStyle.getPropertyValue('--green-600'),\n        tension: .4\n      }]\n    };\n    this.chartOptions = {\n      plugins: {\n        legend: {\n          labels: {\n            color: textColor\n          }\n        }\n      },\n      scales: {\n        x: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        },\n        y: {\n          ticks: {\n            color: textColorSecondary\n          },\n          grid: {\n            color: surfaceBorder,\n            drawBorder: false\n          }\n        }\n      }\n    };\n  }\n  detalheRestricao(restricao) {\n    this.visibleDetalheRestricao = false;\n    this.restricao = restricao;\n    this.restricaoService.getDetalheRestricao(restricao).subscribe(data => {\n      this.restricaoDetalhe = data;\n      this.visibleDetalheRestricao = true;\n    });\n  }\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n};\nDashboardComponent = __decorate([Component({\n  templateUrl: './dashboard.component.html'\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"mappings":"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","names":["Component","DashboardComponent","constructor","restricaoService","layoutService","subscription","configUpdate$","subscribe","initChart","ngOnInit","getRestricoes","data","restricoes","items","label","icon","documentStyle","getComputedStyle","document","documentElement","textColor","getPropertyValue","textColorSecondary","surfaceBorder","chartData","labels","datasets","fill","backgroundColor","borderColor","tension","chartOptions","plugins","legend","color","scales","x","ticks","grid","drawBorder","y","detalheRestricao","restricao","visibleDetalheRestricao","getDetalheRestricao","restricaoDetalhe","ngOnDestroy","unsubscribe","templateUrl"],"sourceRoot":"","sources":["C:\\ambiente\\workspace-aceitacao-front\\aceitacao-front\\src\\app\\demo\\components\\dashboard\\dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MenuItem } from 'primeng/api';\nimport { Product } from '../../api/product';\nimport { Subscription } from 'rxjs';\nimport { LayoutService } from 'src/app/layout/service/app.layout.service';\nimport { RestricoesService } from '../../service/restricao.service';\nimport { Restricao } from '../../api/restricao';\nimport { DetalheRestricao } from '../../api/detalhe.restricao';\n\n@Component({\n    templateUrl: './dashboard.component.html',\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n    items!: MenuItem[];\n\n    restricoes!: Restricao[];\n\n    chartData: any;\n\n    chartOptions: any;\n\n    subscription!: Subscription;\n\n    restricaoDetalhe!: DetalheRestricao[];\n\n    restricao!:Restricao;\n\n    visibleDetalheRestricao!: boolean;\n\n    constructor(private restricaoService: RestricoesService, public layoutService: LayoutService) {\n        this.subscription = this.layoutService.configUpdate$.subscribe(() => {\n            this.initChart();\n        });\n    }\n\n    ngOnInit() {\n        this.initChart();\n        this.restricaoService.getRestricoes().subscribe(data => { \n            this.restricoes = data;\n        });\n\n\n\n        this.items = [\n            { label: 'Add New', icon: 'pi pi-fw pi-plus' },\n            { label: 'Remove', icon: 'pi pi-fw pi-minus' }\n        ];\n    }\n\n    initChart() {\n        const documentStyle = getComputedStyle(document.documentElement);\n        const textColor = documentStyle.getPropertyValue('--text-color');\n        const textColorSecondary = documentStyle.getPropertyValue('--text-color-secondary');\n        const surfaceBorder = documentStyle.getPropertyValue('--surface-border');\n\n        this.chartData = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n                {\n                    label: 'First Dataset',\n                    data: [65, 59, 80, 81, 56, 55, 40],\n                    fill: false,\n                    backgroundColor: documentStyle.getPropertyValue('--bluegray-700'),\n                    borderColor: documentStyle.getPropertyValue('--bluegray-700'),\n                    tension: .4\n                },\n                {\n                    label: 'Second Dataset',\n                    data: [28, 48, 40, 19, 86, 27, 90],\n                    fill: false,\n                    backgroundColor: documentStyle.getPropertyValue('--green-600'),\n                    borderColor: documentStyle.getPropertyValue('--green-600'),\n                    tension: .4\n                }\n            ]\n        };\n\n        this.chartOptions = {\n            plugins: {\n                legend: {\n                    labels: {\n                        color: textColor\n                    }\n                }\n            },\n            scales: {\n                x: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                },\n                y: {\n                    ticks: {\n                        color: textColorSecondary\n                    },\n                    grid: {\n                        color: surfaceBorder,\n                        drawBorder: false\n                    }\n                }\n            }\n        };\n    }\n\n    detalheRestricao(restricao:any) {\n        this.visibleDetalheRestricao = false;\n        this.restricao = restricao;\n        \n        this.restricaoService.getDetalheRestricao(restricao).subscribe(data => { \n            this.restricaoDetalhe = data;\n            this.visibleDetalheRestricao = true;\n        });        \n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}